/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    combos {
        compatible = "zmk,combos";

        email {
            bindings = <&Email>;
            key-positions = <3 31>;
            layers = <0>;
        };

        name {
            bindings = <&name>;
            key-positions = <15 21>;
        };
    };

    macros {
        Email: Email {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp L &kp E &kp Q &kp U &kp A &kp N &kp G &kp D &kp I &kp N &kp H &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
        };

        name: name {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(Q) &kp U &kp A &kp N &kp G &kp SPACE &kp LS(D) &kp I &kp N &kp H &kp SPACE &kp LS(L) &kp E>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&mt LEFT_ALT ESCAPE        &lt 4 Q  &kp W  &kp E  &kp R                 &kp T                 &kp Y            &kp U      &kp I          &kp O    &kp P          &kp BACKSLASH
&mt LCTRL TAB              &kp A    &kp S  &kp D  &kp F                 &kp G                 &kp H            &kp J      &kp K          &kp L    &kp SEMICOLON  &mt RIGHT_ALT SINGLE_QUOTE
&mt LC(LEFT_ALT) LEFT_GUI  &lt 2 Z  &kp X  &kp C  &kp V                 &kp B                 &kp N            &kp M      &kp COMMA      &kp DOT  &lt 3 SLASH    &mo 5
                                           &mo 1  &mt LEFT_SHIFT ENTER  &mt LEFT_GUI SPACE    &kp RIGHT_SHIFT  &kp SPACE  &kp BACKSPACE
            >;
        };

        Numbers {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH     &kp SLASH     &kp NUMBER_7  &kp NUMBER_8  &kp N9        &kp MINUS  &kp BSPC
&kp LWIN  &kp BACKSPACE     &kp DELETE         &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE          &kp ASTERISK  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS   &kp EQUAL
&trans    &kp GRAVE         &kp TILDE          &kp SINGLE_QUOTE      &kp DOUBLE_QUOTES      &kp UNDERSCORE    &kp COMMA     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ENTER  &trans
                                               &trans                &trans                 &trans            &trans        &kp PERIOD    &kp NUMBER_0
            >;
        };

        Nav {
            bindings = <
&trans  &trans  &trans     &trans    &trans    &trans    &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &trans  &trans
&trans  &trans  &trans     &trans    &trans    &trans    &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &trans  &trans
&trans  &trans  &kp LCTRL  &kp LALT  &kp LGUI  &trans    &trans    &trans         &trans       &trans     &trans  &trans
                           &trans    &trans    &trans    &trans    &trans         &trans
            >;
        };

        Controls {
            bindings = <
&rgb_ug RGB_TOG    &rgb_ug RGB_HUI       &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF    &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3       &bt BT_SEL 4   &trans
&ext_power EP_TOG  &rgb_ug RGB_HUD       &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR    &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3      &bt BT_DISC 4  &out OUT_BLE
&kp C_BRI_DEC      &kp C_BRIGHTNESS_INC  &kp C_VOL_DN     &kp C_MUTE       &kp C_VOL_UP     &trans             &bl BL_SET 10  &bl BL_SET 30  &bl BL_SET 60  &ext_power EP_OFF  &trans         &out OUT_USB
                                                          &bt BT_CLR       &trans           &trans             &trans         &trans         &trans
            >;
        };

        Functions {
            bindings = <
&trans  &trans     &trans    &trans    &trans     &trans    &trans  &kp F7  &kp F8  &kp F9  &kp F10  &trans
&trans  &kp LCTRL  &kp LALT  &kp LGUI  &kp LSHFT  &trans    &trans  &kp F4  &kp F5  &kp F6  &kp F11  &trans
&trans  &trans     &trans    &trans    &trans     &trans    &trans  &kp F1  &kp F2  &kp F3  &kp F12  &kp LCTRL
                             &trans    &trans     &trans    &trans  &trans  &trans
            >;
        };

        Control {
            bindings = <
&trans  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4     &trans  &trans  &trans          &trans  &trans  &bt BT_CLR
&trans  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4    &trans  &trans  &trans          &trans  &trans  &trans
&trans  &trans         &trans         &trans         &trans         &trans           &trans  &trans  &trans          &trans  &trans  &trans
                                      &out OUT_USB   &soft_off      &out OUT_BLE     &trans  &trans  &bt BT_CLR_ALL
            >;
        };
    };
};

&led_strip { chain-length = <27>; };
